name: Web App CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r web-app/requirements.txt
          pip install pytest  

  docker:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/web-app:latest web-app
          docker push ${{ secrets.DOCKER_USERNAME }}/web-app:latest

      #- name: Run Tests
      #  run: |
      #    pytest web-app/tests/test_app.py

  deploy:
    needs: docker
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DO_SERVER_IP }}
          username: root
          password: ${{ secrets.DO_SERVER_PASSWORD }}
          port: 22
          script: |
            docker system prune -f
            docker pull ${{ secrets.DOCKER_USERNAME }}/web-app:latest
            if docker ps -a --format '{{.Names}}' | grep -Eq "^web-app$"; then
              echo "Stopping and removing the existing web-app container..."
              docker stop web-app || true
              docker rm web-app || true
            else
              echo "No existing web-app container found."
            fi
            echo "Checking for port conflicts on port 5001..."
            if lsof -i :5001; then
              echo "Port 5001 is in use. Freeing the port..."
              fuser -k 5001/tcp
              sleep 2 
            else
              echo "Port 5001 is free."
            fi
            echo "Starting the new web-app container..."
            docker run -d -p 5001:5001 --name web-app ${{ secrets.DOCKER_USERNAME }}/web-app:latest
            echo "Verifying the web-app container status..."
            if ! docker ps | grep -q "web-app"; then
              echo "Error: The web-app container failed to start."
              exit 1
            fi

            echo "Web-app deployed successfully."


